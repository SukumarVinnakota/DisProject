@model DisProject.Models.VehicleRegistration

@{
    ViewBag.Title = "Create";
}

@*<h2>Create</h2>*@
<script>
    function myFunction() {
        var VehcileRegistrationId = document.getElementById("VehcileRegistrationId").value;
        var make = document.getElementById("Make").value;
        var modelYear = document.getElementById("ModelYear").value;
        var model = document.getElementById("Model").value;
        var ElectricRange = document.getElementById("ElectricRange").value;
        var VehicleType = document.getElementById("VehicleType").value;
        var cafv = document.getElementById("CAFV").value;
        var addressLine1 = document.getElementById("AddressLine1").value;
        var addressLine2 = document.getElementById("AddressLine2").value;
        var e = document.getElementById("CityId");
        var city = e.options[e.selectedIndex].value;
        var zip = document.getElementById("Zip").value;
        var count = 0;


        @* Vehicle registration *@
        if (VehcileRegistrationId == "") {
            alert("Please enter vehicle identification number");
        } else if (VehcileRegistrationId.length != 10) {
            alert(" Vehicle identification number should be 10 charecters");
            isError = true;
        }
        else  {
            var regex = /^[a-zA-Z0-9\s]+$/;
            if (regex.test(VehcileRegistrationId) === false) {
                alert("Please enter a valid Vehicle identification number");
            } else {
                count = count + 1;
            }
        }
        @* Make Validation *@
        if (make == "") {
            alert("Please enter vehicle manufacturer");
        } else if (make.length > 20) {
            alert(" Name of the vechicle manufacturer should be less than 20 charecters");
        }
        else if (make != "") {
            var regex = /^[a-zA-Z\s]+$/;
            if (regex.test(make) === false) {
                alert("Please enter a valid vehicle manufacturer");
            } else {
                count = count + 1;
            }
        }

        @* Model Year *@
        if (modelYear == "") {
            alert("Please enter Model Year");
        } else if (modelYear.length != 4) {
            alert("Model Year should be of 4 charecters");
        }
        else if (modelYear != "") {
            var regex = /^[0-9\s]+$/;
            if (regex.test(modelYear) === false) {
                alert("Please enter a valid Model Year");
            } else {
                count=count+1;
            }
        }

        @* Model Validation *@
        if (model == "") {
            alert("Please enter car model");
        } else if (model.length > 20) {
            alert(" Name of the car model should be less than 20 charecters");
        }
        else if (model!=""){
            var regex = /^[a-zA-Z\s]+$/;
            if (regex.test(model) === false) {
                alert("Please enter a valid Model");
            } else {
                count = count+1;
            }
        }

        @* Electric Range *@
        if (ElectricRange == "") {
            alert("Please enter Range of Electric Vehicle");
        } else if (ElectricRange.length > 3) {
            alert(" Please enter valid Range of Electric Vehicle");
        }
        else if (ElectricRange != ""){
            var regex = /^[0-9\s]+$/;
            if (regex.test(ElectricRange) === false) {
                alert("Please enter valid Range of Electric Vehicle");
            } else {
               count=count+1;
            }
        }

        @* VehicleType *@
         if (VehicleType == "") {
            alert("Please enter Type of Electric Vehicle");
        }
        else if(VehicleType != ""){
            count = count + 1;
            
        }

        @* cafv *@
        if (cafv == "") {
            alert("Please enter Clean Alternative Fuel Vehicle (CAFV) Eligibility");
        }
        else if (cafv != ""){
            var regex = /^[a-zA-Z\s]+$/;
            if (regex.test(cafv) === false) {
                alert("Please enter valid Clean Alternative Fuel Vehicle (CAFV) Eligibility");
            } else {
                count = count + 1;;
            }
        }

        @* AddresssLine1 *@
        if (addressLine1 == "") {
            alert("Please enter Address");
        }
        else if(addressLine1 != ""){
            count = count + 1;
            
        }

        @* city *@
        if (city == "0") {
            alert("Please select a city"); 
        }
        else if (city != "0"){
            count = count + 1;

        }

        @* zip *@
        if (zip == "") {
            alert("Please enter Zip code");
        } else if (zip.length != 5) {
            alert("Zip code should be 5 charecters");
        }
        else if (zip != ""){
            var regex = /^[0-9\s]+$/;
            if (regex.test(zip) === false) {
                alert("Please enter a valid Zip code");
            } else {
                count = count + 1;
            }
        }
        if (count ==10) {
          document.getElementById("signupform").submit();
        }
    }
</script>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "signupform" }))
{
    @Html.AntiForgeryToken()
    <br />
<div class="container">
    <a href="./" class="btn btn-success" role="button">
        <span class="glyphicon glyphicon-chevron-left"></span>Back to List
    </a>
    </div>
    <br />
    <div class="container">

        <legend>
            <h3>Register a Vehicle</h3>
        </legend>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <b style="color:red"> @ViewBag.error</b>

        <div class="form-group form-inline col-sm-12">
            <div class="col-sm-3">
                <label for="vin">Vehicle Identification Number</label> &nbsp;<label style="color: red;">*</label>
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(model => model.VehcileRegistrationId, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g:1G1RC6E45F", title = "Vehicle Identification Number (VIN)", maxlength = "10" } })
                @Html.ValidationMessageFor(model => model.VehcileRegistrationId, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <label for="make">Vehicle Manufacturer</label>&nbsp;<label style="color: red;">*</label>
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g: Tesla", title = "The manufacturer of the vehicle, determined by decoding the Vehicle Identification Number (VIN).", maxlength = "20" } })
                @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group form-inline col-sm-12">
            <div class="col-sm-3">
                <label for="year">Model year</label>&nbsp;<label style="color: red;">*</label>
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(model => model.ModelYear, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g: 2020", title = "The model year of the vehicle, determined by decoding the Vehicle Identification Number (VIN).", maxlength = "4" } })
                @Html.ValidationMessageFor(model => model.ModelYear, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <label for="model">Vehicle Model</label>&nbsp;<label style="color: red;">*</label>
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g: Model s", title = "The model of the vehicle, determined by decoding the Vehicle Identification Number (VIN).", maxlength = "10" } })
                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group form-inline col-sm-12">
            <div class="col-sm-3">
                <label for="range">Electric Range</label>
            </div>
            <div class="col-sm-3">
                @Html.EditorFor(model => model.ElectricRange, new { htmlAttributes = new { @class = "form-control", maxlength = "3", @placeholder = "E.g: 322", title = "Describes how far a vehicle can travel purely on its electric charge." } })
                @Html.ValidationMessageFor(model => model.ElectricRange, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group form-inline col-sm-12">
            <div class="col-sm-3">
                <label for="evt">Electric Vehicle Type</label>&nbsp;<label style="color: red;">*</label>
            </div>
            <div class="col-sm-3">
                @Html.EditorFor(model => model.VehicleType, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g: Plug-in Hybrid or Electric Vehicle", title = "This distinguishes the vehicle as all electric or a plug-in hybrid.", maxlength = "30" } })
                @Html.ValidationMessageFor(model => model.VehicleType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group form-inline col-sm-12">
            <div class="col-sm-3">
                <label for="capv">Clean Alternative Fuel Vehicle (CAFV) Eligibility &nbsp;<label style="color: red;">*</label></label>
            </div>
            <div class="col-sm-3">
                @Html.EditorFor(model => model.CAFV, new { htmlAttributes = new { @class = "form-control", maxlength = 30, @placeholder = "E.g: Clean Alternative Fuel Vehicle Eligible", title = "This categorizes vehicle as Clean Alternative Fuel Vehicles (CAFVs) based on the fuel requirement and electric-only range requirement in House Bill 2042 as passed in the 2019 legislative session." } })
                @Html.ValidationMessageFor(model => model.CAFV, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group form-inline col-sm-12">
            <div class="col-sm-3">
                <label for="ad1">Address Line1</label>&nbsp;<label style="color: red;">*</label>
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control", maxlength = "200", @placeholder = "Enter the Address", title = "The address in which the registered owner resides." } })
                @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <label for="ad2">Address Line 2</label>
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control", maxlength = "200" } })
                @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group form-inline col-sm-12">
            <div class="col-sm-3">
                <label for="evt">City</label>&nbsp;<label style="color: red;">*</label>
            </div>
            <div class="col-sm-3">
                @Html.DropDownList("CityId", new SelectList(ViewBag.data, "CityId", "CityName"), htmlAttributes: new { @class = "form-control", title = "The city in which the registered owner resides" })
                @* @Html.DropDownList("City Name", new SelectList(ViewBag.data, "CityId", "CityName")) *@
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group form-inline col-sm-12">
            <div class="col-sm-3">
                <label for="state">State</label>&nbsp;<label style="color: red;">*</label>
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g: WA", title = "The state in which the registered owner resides.", @disabled = "disabled", @Value = "WA" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-1"></div>
            <div class="col-sm-3">
                <label for="zip">ZIP</label>&nbsp;<label style="color: red;">*</label>
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g: 33613", title = "The 5 digit zip code in which the registered owner resides.", maxlength = "5" } })
                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
            </div>
        </div>
        @* <div class="form-group">
                @Html.LabelFor(model => model.VehcileRegistrationId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VehcileRegistrationId, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g:1G1RC6E45F", title = "Vehicle Identification Number (VIN)", maxlength = "10" } })
                    @Html.ValidationMessageFor(model => model.VehcileRegistrationId, "", new { @class = "text-danger" })
                </div>
            </div>*@


        <!--<div class="form-group">
            @Html.LabelFor(model => model.City.CityId, "City Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CityId", new SelectList(ViewBag.data, "CityId", "CityName"), htmlAttributes: new { @class = "form-control", title = "The city in which the registered owner resides" })-->
        @* @Html.DropDownList("City Name", new SelectList(ViewBag.data, "CityId", "CityName")) *@
        <!--@Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>-->
        @* <div class="form-group">
                @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g: 33613", title = "The 5 digit zip code in which the registered owner resides.", maxlength = "5" } })
                    @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*  <div class="form-group">
                @Html.LabelFor(model => model.ModelYear, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModelYear, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g: 2020", title = "The model year of the vehicle, determined by decoding the Vehicle Identification Number (VIN).", maxlength = "4" } })
                    @Html.ValidationMessageFor(model => model.ModelYear, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Make, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g: Tesla", title = "The manufacturer of the vehicle, determined by decoding the Vehicle Identification Number (VIN).", maxlength = "20" } })
                    @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g: Model s", title = "The model of the vehicle, determined by decoding the Vehicle Identification Number (VIN).", maxlength = "10" } })
                    @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @* <div class="form-group">
                @Html.LabelFor(model => model.VehicleType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VehicleType, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g: Plug-in Hybrid or Electric Vehicle", title = "This distinguishes the vehicle as all electric or a plug-in hybrid.", maxlength = "10" } })
                    @Html.ValidationMessageFor(model => model.VehicleType, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*   <div class="form-group">
                @Html.LabelFor(model => model.CAFV, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CAFV, new { htmlAttributes = new { @class = "form-control", maxlength = 10, @placeholder = "E.g: Clean Alternative Fuel Vehicle Eligible", title = "This categorizes vehicle as Clean Alternative Fuel Vehicles (CAFVs) based on the fuel requirement and electric-only range requirement in House Bill 2042 as passed in the 2019 legislative session." } })
                    @Html.ValidationMessageFor(model => model.CAFV, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @* <div class="form-group">
                @Html.LabelFor(model => model.ElectricRange, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ElectricRange, new { htmlAttributes = new { @class = "form-control", maxlength = "3", @placeholder = "E.g: 322", title = "Describes how far a vehicle can travel purely on its electric charge." } })
                    @Html.ValidationMessageFor(model => model.ElectricRange, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @* <div class="form-group">
                @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control", maxlength = "200", @placeholder = "Enter the Address", title = "The address in which the registered owner resides." } })
                    @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @* <div class="form-group">
                @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control", maxlength = "200" } })
                    @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @placeholder = "E.g: WA", title = "The state in which the registered owner resides.", @disabled = "disabled", @Value = "WA" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="col-sm-5"></div>
        <div class="col-sm-2">
            <br> <input type="button" value="Create" class="btn btn-success" role="button" data-toggle="tooltip" title="Create" onclick="myFunction()"/>
        </div>
        <!--<div class="col-sm-2">
            <br>-->
        @* @Html.ActionLink("Back to List", "Index")*@
        <!--<a href="./" class="btn btn-success" role="button">
                <span class="glyphicon glyphicon-chevron-left"></span>Back to List
            </a>
        </div>
        <div class="col-sm-5"></div>-->
        @*    <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" role="button" data-toggle="tooltip" title="Create" />
                </div>
            </div>*@
    </div>
    }
    @*
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    *@
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
